{"version":3,"sources":["components/LikeButton.jsx","components/MyToast.jsx","components/ShareButton.jsx","components/Card.jsx","components/LoadingScreen.jsx","components/DateSelectMenu.jsx","components/NavBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["LikeButton","useState","clickedLike","setClickedLike","icon","className","backgroundColour","onClick","style","backgroundColor","MyToast","props","bool","linkButtonClicked","display","ShareButton","shareOptions","urlLink","description","title","showShareOptions","setShowShareOptionsDisplay","copyLinkClicked","setCopyLinkClicked","ref","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","FacebookShareButton","url","quote","FacebookIcon","size","TwitterShareButton","TwitterIcon","navigator","clipboard","writeText","Card","imageElement","mediaType","imageUrl","date","src","alt","height","width","controls","LoadingScreen","DateSelectMenu","dateSelection","values","htmlFor","name","id","onChange","value","NavBar","href","App","imageCards","loadingScreenDisplay","todayDate","Date","toISOString","slice","startingDate","setDate","getDate","apiUrl","isLoading","setIsLoading","jsonData","setJsonData","fetchApi","this_startDate","fetch","then","response","ok","Error","json","data","reverse","catch","error","console","arrayToLoop","info","item","push","media_type","explanation","createCards","Fragment","dateValue","newStartDate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a0421f07.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./LikeButton.css\";\r\nfunction LikeButton() {\r\n  const [clickedLike, setClickedLike] = useState(false);\r\n\r\n  let icon = clickedLike ? (\r\n    <i className=\"fas fa-heart heart-animation\"></i>\r\n  ) : (\r\n    \"Like\"\r\n  );\r\n  let backgroundColour = clickedLike ? \"red\" : \"white\";\r\n  return (\r\n    <button\r\n      className=\"my-like-button\"\r\n      onClick={handleClick}\r\n      style={{ backgroundColor: backgroundColour }}\r\n    >\r\n      {icon}\r\n    </button>\r\n  );\r\n\r\n  function handleClick() {\r\n    setClickedLike(!clickedLike);\r\n  }\r\n}\r\n\r\nexport default LikeButton;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./MyToast.css\";\r\n\r\nfunction MyToast(props) {\r\n  const { linkButtonClicked } = props;\r\n  let bool = linkButtonClicked;\r\n\r\n  const mountedStyle = { display: \"block\" };\r\n  const unmountedStyle = {\r\n    display: \"none\",\r\n  };\r\n  let styling = \"my-toast\";\r\n\r\n  return (\r\n    <div className={styling} style={bool ? mountedStyle : unmountedStyle}>\r\n      <p>Link Copied</p>\r\n    </div>\r\n  );\r\n}\r\nexport default MyToast;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  FacebookShareButton,\r\n  FacebookIcon,\r\n  TwitterShareButton,\r\n  TwitterIcon,\r\n} from \"react-share\";\r\nimport MyToast from \"./MyToast\";\r\nimport \"./ShareButton.css\";\r\n\r\nfunction ShareButton(props) {\r\n  const { urlLink, description, title } = props;\r\n  const [showShareOptions, setShowShareOptionsDisplay] = useState(false);\r\n  const [copyLinkClicked, setCopyLinkClicked] = useState(false);\r\n\r\n  //used to reference a specific element in the DOM similar to documentQuerySelector\r\n  const ref = useRef(null);\r\n\r\n  let shareOptions;\r\n  function share() {\r\n    setShowShareOptionsDisplay(true);\r\n  }\r\n  function copyLink() {\r\n    navigator.clipboard.writeText(urlLink);\r\n    setCopyLinkClicked(true);\r\n    // setTimeout(() => {\r\n    //   setCopyLinkClicked(false);\r\n    // }, 2000);\r\n  }\r\n\r\n  //used to check if the component has mounted onto the DOM\r\n  //in order to execute the function\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (\r\n        showShareOptions &&\r\n        ref.current &&\r\n        !ref.current.contains(event.target)\r\n      ) {\r\n        setShowShareOptionsDisplay(false);\r\n      }\r\n    }\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n    return () => {\r\n      //cleans up the event listener when component unmounts from the dom\r\n      document.removeEventListener(\"click\", handleClickOutside);\r\n    };\r\n  });\r\n\r\n  if (showShareOptions) {\r\n    shareOptions = (\r\n      <div ref={ref} className=\"share-options\">\r\n        <FacebookShareButton url={urlLink} quote={description}>\r\n          <FacebookIcon size={50} />\r\n        </FacebookShareButton>\r\n        <TwitterShareButton url={urlLink} title={title}>\r\n          <TwitterIcon size={50} />\r\n        </TwitterShareButton>\r\n        <i className=\"fas fa-link\" onClick={copyLink}></i>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"share-button-container\">\r\n        <button className=\"my-share-button\" onClick={share}>\r\n          Share\r\n        </button>\r\n        {shareOptions}\r\n      </div>\r\n      {/* {copyLinkClicked ? <MyToast linkButtonClicked={copyLinkClicked} /> : \"\"} */}\r\n      <MyToast linkButtonClicked={copyLinkClicked} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShareButton;\r\n","import React from \"react\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport ShareButton from \"./ShareButton\";\r\nimport \"./Card.css\";\r\nfunction Card(props) {\r\n  const { title, mediaType, imageUrl, date, description } = props;\r\n  let imageElement;\r\n  if (mediaType === \"image\") {\r\n    imageElement = (\r\n      <img\r\n        src={imageUrl}\r\n        alt=\"an picture taken by NASA of space\"\r\n        className=\"card-img-top\"\r\n      />\r\n    );\r\n  } else {\r\n    imageElement = (\r\n      <iframe\r\n        title={\"youtube video of \" + title}\r\n        style={{ height: \"20em\", width: \"auto\" }}\r\n        controls\r\n        src={imageUrl}\r\n        alt=\"an picture taken by NASA of space\"\r\n        className=\"card-img-top\"\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"card pb-2 shadow-sm\">\r\n      {/* <img\r\n        src={imageUrl}\r\n        alt=\"an picture taken by NASA of space\"\r\n        className=\"card-img-top\"\r\n      /> */}\r\n      {imageElement}\r\n      <div className=\"card-body\">\r\n        <h2 className=\"card-title\">{title}</h2>\r\n        <p>{date}</p>\r\n        <p className=\"card-text\">{description}</p>\r\n        <div className=\"my-buttons\">\r\n          <LikeButton />\r\n          <ShareButton\r\n            urlLink={imageUrl}\r\n            description={description}\r\n            title={title}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./LoadingScreen.css\";\r\nfunction LoadingScreen(props) {\r\n  const { display } = props;\r\n\r\n  return (\r\n    <div className=\"background-overlay\" style={{ display: display }}>\r\n      <div className=\"loading-icon-wrapper\">\r\n        <div className=\"loading-icon loading-icon-animation\"></div>\r\n        {/* <div className=\"loading-icon2 loading-icon-animation-reverse\"></div> */}\r\n        <p>Loading</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingScreen;\r\n","import React from \"react\";\r\nimport \"./DateSelectMenu.css\";\r\nfunction DateSelectMenu(props) {\r\n  const { dateSelection } = props;\r\n\r\n  const values = [10, 20, 30, 60];\r\n\r\n  function handleChange(event) {\r\n    dateSelection(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"date-selector-menu\">\r\n      <label htmlFor=\"date-selector\">Posts from last</label>\r\n      <select name=\"date-selector\" id=\"date-selector\" onChange={handleChange}>\r\n        <option value={values[0]}>10 days</option>\r\n        <option value={values[1]}>20 days</option>\r\n        <option value={values[2]}>30 days</option>\r\n        <option value={values[3]}>2 months</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\nexport default DateSelectMenu;\r\n","import React from \"react\";\r\nimport \"./NavBar.css\";\r\nimport DateSelectMenu from \"./DateSelectMenu\";\r\nfunction NavBar(props) {\r\n  const { dateSelection } = props;\r\n  return (\r\n    <nav className=\"navbar fixed-top\">\r\n      <div>\r\n        <span className=\"navbar-brand h1\" href=\"#\">\r\n          Spacestagram\r\n        </span>\r\n        <p>Brought to you by NASA's Astronomy Picture of the Day (APOD) API</p>\r\n      </div>\r\n      <DateSelectMenu dateSelection={dateSelection} />\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport Card from \"./components/Card\";\r\nimport LoadingScreen from \"./components/LoadingScreen\";\r\nimport NavBar from \"./components/NavBar\";\r\n\r\nfunction App() {\r\n  let imageCards;\r\n  let loadingScreenDisplay;\r\n\r\n  let todayDate = new Date().toISOString().slice(0, 10);\r\n  let startingDate = new Date();\r\n  startingDate.setDate(startingDate.getDate() - 10);\r\n  startingDate = startingDate.toISOString().slice(0, 10);\r\n\r\n  //hooks\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [jsonData, setJsonData] = useState(null);\r\n\r\n  let apiKey = \"vn0fMtp6NRQpMEMQlXgvuFttofKGuxcMKFG0cixN\";\r\n  let apiUrl;\r\n\r\n  useEffect(() => {\r\n    fetchApi(startingDate);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function fetchApi(this_startDate) {\r\n    apiUrl = `https://api.nasa.gov/planetary/apod?api_key=${apiKey}&start_date=${this_startDate}&end_date=${todayDate}`;\r\n    fetch(apiUrl)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"no reposnse\");\r\n        }\r\n\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setJsonData(data.reverse());\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"problem fetching data\");\r\n      });\r\n  }\r\n\r\n  function createCards(arrayToLoop) {\r\n    let info = [];\r\n\r\n    for (let item of arrayToLoop) {\r\n      info.push(\r\n        <div key={item.title} className=\"row justify-content-center mt-4\">\r\n          <div className=\"col-lg-4 col-md-8 col-sm-auto\">\r\n            <Card\r\n              title={item.title}\r\n              mediaType={item.media_type}\r\n              imageUrl={item.url}\r\n              date={item.date}\r\n              description={item.explanation}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return info;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {*} dateValue the number of days to go back from the current date\r\n   */\r\n  function dateSelection(dateValue) {\r\n    let newStartDate = new Date();\r\n    newStartDate.setDate(new Date().getDate() - dateValue);\r\n    newStartDate = newStartDate.toISOString().slice(0, 10);\r\n\r\n    setIsLoading(true);\r\n    fetchApi(newStartDate);\r\n  }\r\n  if (!isLoading) {\r\n    loadingScreenDisplay = \"none\";\r\n    imageCards = createCards(jsonData);\r\n  } else {\r\n    loadingScreenDisplay = \"block\";\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar dateSelection={dateSelection} />\r\n      <LoadingScreen display={loadingScreenDisplay} />\r\n      <div className=\"container \">{imageCards}</div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}